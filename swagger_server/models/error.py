# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Error(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, voltage_r: bool=None, voltage_s: bool=None, voltage_t: bool=None):  # noqa: E501
        """Error - a model defined in Swagger

        :param voltage_r: The voltage_r of this Error.  # noqa: E501
        :type voltage_r: bool
        :param voltage_s: The voltage_s of this Error.  # noqa: E501
        :type voltage_s: bool
        :param voltage_t: The voltage_t of this Error.  # noqa: E501
        :type voltage_t: bool
        """
        self.swagger_types = {
            'voltage_r': bool,
            'voltage_s': bool,
            'voltage_t': bool
        }

        self.attribute_map = {
            'voltage_r': 'voltageR',
            'voltage_s': 'voltageS',
            'voltage_t': 'voltageT'
        }

        self._voltage_r = voltage_r
        self._voltage_s = voltage_s
        self._voltage_t = voltage_t

    @classmethod
    def from_dict(cls, dikt) -> 'Error':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Error of this Error.  # noqa: E501
        :rtype: Error
        """
        return util.deserialize_model(dikt, cls)

    @property
    def voltage_r(self) -> bool:
        """Gets the voltage_r of this Error.


        :return: The voltage_r of this Error.
        :rtype: bool
        """
        return self._voltage_r

    @voltage_r.setter
    def voltage_r(self, voltage_r: bool):
        """Sets the voltage_r of this Error.


        :param voltage_r: The voltage_r of this Error.
        :type voltage_r: bool
        """

        self._voltage_r = voltage_r

    @property
    def voltage_s(self) -> bool:
        """Gets the voltage_s of this Error.


        :return: The voltage_s of this Error.
        :rtype: bool
        """
        return self._voltage_s

    @voltage_s.setter
    def voltage_s(self, voltage_s: bool):
        """Sets the voltage_s of this Error.


        :param voltage_s: The voltage_s of this Error.
        :type voltage_s: bool
        """

        self._voltage_s = voltage_s

    @property
    def voltage_t(self) -> bool:
        """Gets the voltage_t of this Error.


        :return: The voltage_t of this Error.
        :rtype: bool
        """
        return self._voltage_t

    @voltage_t.setter
    def voltage_t(self, voltage_t: bool):
        """Sets the voltage_t of this Error.


        :param voltage_t: The voltage_t of this Error.
        :type voltage_t: bool
        """

        self._voltage_t = voltage_t
