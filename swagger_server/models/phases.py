# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Phases(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, phase_r: bool=None, phase_s: bool=None, phase_t: bool=None):  # noqa: E501
        """Phases - a model defined in Swagger

        :param phase_r: The phase_r of this Phases.  # noqa: E501
        :type phase_r: bool
        :param phase_s: The phase_s of this Phases.  # noqa: E501
        :type phase_s: bool
        :param phase_t: The phase_t of this Phases.  # noqa: E501
        :type phase_t: bool
        """
        self.swagger_types = {
            'phase_r': bool,
            'phase_s': bool,
            'phase_t': bool
        }

        self.attribute_map = {
            'phase_r': 'phase_R',
            'phase_s': 'phase_S',
            'phase_t': 'phase_T'
        }

        self._phase_r = phase_r
        self._phase_s = phase_s
        self._phase_t = phase_t

    @classmethod
    def from_dict(cls, dikt) -> 'Phases':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Phases of this Phases.  # noqa: E501
        :rtype: Phases
        """
        return util.deserialize_model(dikt, cls)

    @property
    def phase_r(self) -> bool:
        """Gets the phase_r of this Phases.


        :return: The phase_r of this Phases.
        :rtype: bool
        """
        return self._phase_r

    @phase_r.setter
    def phase_r(self, phase_r: bool):
        """Sets the phase_r of this Phases.


        :param phase_r: The phase_r of this Phases.
        :type phase_r: bool
        """
        if phase_r is None:
            raise ValueError("Invalid value for `phase_r`, must not be `None`")  # noqa: E501

        self._phase_r = phase_r

    @property
    def phase_s(self) -> bool:
        """Gets the phase_s of this Phases.


        :return: The phase_s of this Phases.
        :rtype: bool
        """
        return self._phase_s

    @phase_s.setter
    def phase_s(self, phase_s: bool):
        """Sets the phase_s of this Phases.


        :param phase_s: The phase_s of this Phases.
        :type phase_s: bool
        """
        if phase_s is None:
            raise ValueError("Invalid value for `phase_s`, must not be `None`")  # noqa: E501

        self._phase_s = phase_s

    @property
    def phase_t(self) -> bool:
        """Gets the phase_t of this Phases.


        :return: The phase_t of this Phases.
        :rtype: bool
        """
        return self._phase_t

    @phase_t.setter
    def phase_t(self, phase_t: bool):
        """Sets the phase_t of this Phases.


        :param phase_t: The phase_t of this Phases.
        :type phase_t: bool
        """
        if phase_t is None:
            raise ValueError("Invalid value for `phase_t`, must not be `None`")  # noqa: E501

        self._phase_t = phase_t
