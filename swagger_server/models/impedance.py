# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Impedance(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, r1: float=None, r0: float=None, x1: float=None, x0: float=None, c1: float=None, c0: float=None):  # noqa: E501
        """Impedance - a model defined in Swagger

        :param r1: The r1 of this Impedance.  # noqa: E501
        :type r1: float
        :param r0: The r0 of this Impedance.  # noqa: E501
        :type r0: float
        :param x1: The x1 of this Impedance.  # noqa: E501
        :type x1: float
        :param x0: The x0 of this Impedance.  # noqa: E501
        :type x0: float
        :param c1: The c1 of this Impedance.  # noqa: E501
        :type c1: float
        :param c0: The c0 of this Impedance.  # noqa: E501
        :type c0: float
        """
        self.swagger_types = {
            'r1': float,
            'r0': float,
            'x1': float,
            'x0': float,
            'c1': float,
            'c0': float
        }

        self.attribute_map = {
            'r1': 'R1',
            'r0': 'R0',
            'x1': 'X1',
            'x0': 'X0',
            'c1': 'C1',
            'c0': 'C0'
        }

        self._r1 = r1
        self._r0 = r0
        self._x1 = x1
        self._x0 = x0
        self._c1 = c1
        self._c0 = c0

    @classmethod
    def from_dict(cls, dikt) -> 'Impedance':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Impedance of this Impedance.  # noqa: E501
        :rtype: Impedance
        """
        return util.deserialize_model(dikt, cls)

    @property
    def r1(self) -> float:
        """Gets the r1 of this Impedance.


        :return: The r1 of this Impedance.
        :rtype: float
        """
        return self._r1

    @r1.setter
    def r1(self, r1: float):
        """Sets the r1 of this Impedance.


        :param r1: The r1 of this Impedance.
        :type r1: float
        """

        self._r1 = r1

    @property
    def r0(self) -> float:
        """Gets the r0 of this Impedance.


        :return: The r0 of this Impedance.
        :rtype: float
        """
        return self._r0

    @r0.setter
    def r0(self, r0: float):
        """Sets the r0 of this Impedance.


        :param r0: The r0 of this Impedance.
        :type r0: float
        """

        self._r0 = r0

    @property
    def x1(self) -> float:
        """Gets the x1 of this Impedance.


        :return: The x1 of this Impedance.
        :rtype: float
        """
        return self._x1

    @x1.setter
    def x1(self, x1: float):
        """Sets the x1 of this Impedance.


        :param x1: The x1 of this Impedance.
        :type x1: float
        """

        self._x1 = x1

    @property
    def x0(self) -> float:
        """Gets the x0 of this Impedance.


        :return: The x0 of this Impedance.
        :rtype: float
        """
        return self._x0

    @x0.setter
    def x0(self, x0: float):
        """Sets the x0 of this Impedance.


        :param x0: The x0 of this Impedance.
        :type x0: float
        """

        self._x0 = x0

    @property
    def c1(self) -> float:
        """Gets the c1 of this Impedance.


        :return: The c1 of this Impedance.
        :rtype: float
        """
        return self._c1

    @c1.setter
    def c1(self, c1: float):
        """Sets the c1 of this Impedance.


        :param c1: The c1 of this Impedance.
        :type c1: float
        """

        self._c1 = c1

    @property
    def c0(self) -> float:
        """Gets the c0 of this Impedance.


        :return: The c0 of this Impedance.
        :rtype: float
        """
        return self._c0

    @c0.setter
    def c0(self, c0: float):
        """Sets the c0 of this Impedance.


        :param c0: The c0 of this Impedance.
        :type c0: float
        """

        self._c0 = c0
