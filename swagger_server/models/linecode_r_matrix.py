# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.impedance import Impedance  # noqa: F401,E501
from swagger_server import util


class LinecodeRMatrix(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, phase_r: Impedance=None, phase_s: Impedance=None, phase_t: Impedance=None):  # noqa: E501
        """LinecodeRMatrix - a model defined in Swagger

        :param phase_r: The phase_r of this LinecodeRMatrix.  # noqa: E501
        :type phase_r: Impedance
        :param phase_s: The phase_s of this LinecodeRMatrix.  # noqa: E501
        :type phase_s: Impedance
        :param phase_t: The phase_t of this LinecodeRMatrix.  # noqa: E501
        :type phase_t: Impedance
        """
        self.swagger_types = {
            'phase_r': Impedance,
            'phase_s': Impedance,
            'phase_t': Impedance
        }

        self.attribute_map = {
            'phase_r': 'phase_R',
            'phase_s': 'phase_S',
            'phase_t': 'phase_T'
        }

        self._phase_r = phase_r
        self._phase_s = phase_s
        self._phase_t = phase_t

    @classmethod
    def from_dict(cls, dikt) -> 'LinecodeRMatrix':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Linecode_R_Matrix of this LinecodeRMatrix.  # noqa: E501
        :rtype: LinecodeRMatrix
        """
        return util.deserialize_model(dikt, cls)

    @property
    def phase_r(self) -> Impedance:
        """Gets the phase_r of this LinecodeRMatrix.


        :return: The phase_r of this LinecodeRMatrix.
        :rtype: Impedance
        """
        return self._phase_r

    @phase_r.setter
    def phase_r(self, phase_r: Impedance):
        """Sets the phase_r of this LinecodeRMatrix.


        :param phase_r: The phase_r of this LinecodeRMatrix.
        :type phase_r: Impedance
        """

        self._phase_r = phase_r

    @property
    def phase_s(self) -> Impedance:
        """Gets the phase_s of this LinecodeRMatrix.


        :return: The phase_s of this LinecodeRMatrix.
        :rtype: Impedance
        """
        return self._phase_s

    @phase_s.setter
    def phase_s(self, phase_s: Impedance):
        """Sets the phase_s of this LinecodeRMatrix.


        :param phase_s: The phase_s of this LinecodeRMatrix.
        :type phase_s: Impedance
        """

        self._phase_s = phase_s

    @property
    def phase_t(self) -> Impedance:
        """Gets the phase_t of this LinecodeRMatrix.


        :return: The phase_t of this LinecodeRMatrix.
        :rtype: Impedance
        """
        return self._phase_t

    @phase_t.setter
    def phase_t(self, phase_t: Impedance):
        """Sets the phase_t of this LinecodeRMatrix.


        :param phase_t: The phase_t of this LinecodeRMatrix.
        :type phase_t: Impedance
        """

        self._phase_t = phase_t
