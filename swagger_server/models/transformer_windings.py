# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.winding import Winding  # noqa: F401,E501
from swagger_server import util


class TransformerWindings(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, number: int=None, struct: List[Winding]=None):  # noqa: E501
        """TransformerWindings - a model defined in Swagger

        :param number: The number of this TransformerWindings.  # noqa: E501
        :type number: int
        :param struct: The struct of this TransformerWindings.  # noqa: E501
        :type struct: List[Winding]
        """
        self.swagger_types = {
            'number': int,
            'struct': List[Winding]
        }

        self.attribute_map = {
            'number': 'number',
            'struct': 'struct'
        }

        self._number = number
        self._struct = struct

    @classmethod
    def from_dict(cls, dikt) -> 'TransformerWindings':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Transformer_windings of this TransformerWindings.  # noqa: E501
        :rtype: TransformerWindings
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number(self) -> int:
        """Gets the number of this TransformerWindings.


        :return: The number of this TransformerWindings.
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number: int):
        """Sets the number of this TransformerWindings.


        :param number: The number of this TransformerWindings.
        :type number: int
        """

        self._number = number

    @property
    def struct(self) -> List[Winding]:
        """Gets the struct of this TransformerWindings.


        :return: The struct of this TransformerWindings.
        :rtype: List[Winding]
        """
        return self._struct

    @struct.setter
    def struct(self, struct: List[Winding]):
        """Sets the struct of this TransformerWindings.


        :param struct: The struct of this TransformerWindings.
        :type struct: List[Winding]
        """

        self._struct = struct
